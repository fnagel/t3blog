plugin.tx_t3blog_pi1 {
	gravatarsize = 50
	image {
		big {
			imageLinkWrap = 1
			imageLinkWrap {
				enable = 1
				wrap = <a href="javascript:close();"> | </a>
				JSwindow = 1
				JSwindow.newWindow = 1
				JSwindow.expand = 17,20
			}
			file {
				width = 100
			}
		}
		small {
			file {
				height = 40c-100
				width = 40c
			}
		}
	}

	#list
	blogList {
		# send email notification about received blog comments to admin ?
		mailReceivedCommentsToAdmin = 1
		adminsCommentsEmail = {$plugin.tx_t3blog_pi1.blogList.adminsCommentsEmail}
		adminsCommentMailTemplate = EXT:t3blog/pi1/widgets/blogList/adminemail.txt
		approved = 1
		approvedTrackback = 0
		catLinkDivider = {$plugin.tx_t3blog_pi1.blogList.catLinkDivider}

		substitutePagetitle = 1

		loginPid = {$PID.feuser.loginPid}

		numberOfRecords = 5
		# Set the setting below to something > 0 to have that fixed amount of links in the page browser
		# numberOfPageBrowserLinks = 7
		maxPages = 1000

		#gravatar | ratings: g, pg, r, or x
		gravatar = 1
		gravatarAtComments = 1
		gravatarRating = g

		#captcha
		useCaptcha = 1
		captchaFont = x-files.ttf
		captchaFontSize = 25
		captchaFontColor = 000000
		captchaEreg	= A-Za-z
		captchaBackgroundColor = E3E3E3
		captchaShowImage = 1
		captchaBackgroundPNGImage = captcha.png
		captchaLines = 3

		splitLongWordsInComment = 0

		#make comment fields readonly if fe-user is logged in
		readOnly = 1

		#allow to comment comments
		commentComments = 1

		#allow to subscribe for comments
		subscribeForComments = 1

		#senderEmail
		senderEmail = example@example.org

		#views: Amount of seconds which have to pass by until an returning visitor is recounted. Very cool: if you want to have counted each view just put a negative number.
		timePeriodToRecountView = 10000

		#views: Shall we count users which have logged in the backend?
		countBEUsersViews = 1

		## Possible fields would be: commentauthor, commenttext, commentauthoremail, commenttitle, commentauthorwebsite, captcha
		requiredFields = commentauthor, commenttext, commentauthoremail, commenttitle, captcha

		# if you want to use this, make sure you have installed the extension and the specified pid (see constants) points to the correct page
		useTipAFriend = {$CONFIGURATION.useTipAFriend}

		showMore = TEXT
		showMore {
			dataWrap = {field:text}<br />{field:moreLink}
		}

		# Title of the blogentry
		titelListItem = COA
		titelListItem {
			wrap = <div class="title">|</div>
			20 = COA
			20 {
				wrap = <p>|<br/></p>
				if.isTrue.field  = filtered
				10 = TEXT
				10 {
					dataWrap = {field: text}&#32;|<br/>
					field = filtered
					htmlSpecialChars = 1
				}
				20 = TEXT
				20 {
					field = resetText
					typolink {
						parameter.data = TSFE:id
					}
				}
			}
		}

		# Single blog entry in listing
		listItem = COA
		listItem {
			stdWrap {
				dataWrap = <div id="blogentry{field:uid}" class="item">|</div>
			}

			# Top of a Entry.
			5 = COA
			5 {
				wrap = <div class="itemTop">|<div class="clear"><!-- clear --></div></div>
				10 = TEXT
				10 {
					field = categories
				}
				20 = TEXT
				20 {
					field = date
				}
				30 = TEXT
				30 {

					field = time
				}
			}
			# body of a entry
			10 = COA
			10 {
				wrap = <div class="itemBody">|<div class="clear"><!-- clear --></div></div>
				10 = COA
				10 {
					10 = TEXT
					10 {
						field = title
					}
					20 = COA
					20 {
						if.isTrue.field = contentUids
						10 < styles.content.get
						10.select.pidInList.field=blogPid
						10.select.andWhere.dataWrap = irre_parenttable = 'tx_t3blog_post' AND irre_parentid = {field:uid} AND uid in ( {field:contentUids} )
					}
					30 = TEXT
					30 {
						field = showMore
						if.isTrue.field = showMore
					}

				}
			}
			20 = COA
			20 {
				wrap = <div class="itemNav">|<div class="clear"><!-- clear --></div></div>

				10 = TEXT
				10 {
					field = author
					typolink {
						parameter.data = TSFE:id
						additionalParams.dataWrap = &tx_t3blog_pi1[blogList][author]={field:authorId}
						useCacheHash = 1
					}
				}

				12 = TEXT
				12 {
					if.isTrue.field = email
					wrap = <span class="authoremail">(|)</span>
					field= email
				}

				14 = TEXT
				14 {
					if.isTrue.field = tipafriendlinkText
					wrap = <span class="blogtipafriendlink">|</span>
					field = tipafriendlinkText
					typolink {
						parameter = {$PID.tipafriendform}
						additionalParams.dataWrap = &tipUrl={field:blogUrl}
					}
				}

				15 = TEXT
				15 {
					wrap = <span class="permalink">|</span>
					field = permalink
				}

				16 = TEXT
				16 {
					field = comments
				}

#
# Trackback example -- commented for backwards compatibility
#
#				17 = TEXT
#				17 {
#					wrap = <span class="trackback">|</span>
#					field = trackbackLink
#				}
#

				#show gravatar if email is set
				20 = TEXT
				20 {
					required = 1
					if.isTrue.field = email
					field = gravatar
				}

				40 = COA
				40 {
					if.isTrue.field = tagClouds
					wrap = <br /><span class="tags">|</span>

					10 = TEXT
					10.data = LLL:EXT:t3blog/pi1/widgets/blogList/locallang.xml:tagsTitle
					10.noTrimWrap = ||: |

					20 = TEXT
					20 {
						field = tagClouds
						split {
							cObjNum = 1
							token = ,
							1 {
								1 = LOAD_REGISTER
								1 {
									linkparam.cObject = TEXT
									linkparam.cObject {
										current = 1
										trim = 1
										htmlSpecialChars = 1
										rawUrlEncode = 1
									}
								}
								10 = TEXT
								10 {
									trim = 1
									current = 1
									htmlSpecialChars = 1
									typolink {
										parameter.data = TSFE:id
										additionalParams.dataWrap = &tx_t3blog_pi1[blogList][tags]={register:linkparam}
										useCacheHash = 1
									}
									noTrimWrap = | ||
								}
							}
							wrap = | |*| ,|
						}
					}
				}

				50 = COA_INT
				50 {
					wrap = <br /><span class="views">|</span>

					10 = TEXT
					10.data = LLL:EXT:t3blog/pi1/widgets/blogList/locallang.xml:viewsTitle
					10.noTrimWrap = ||: |

					20 = TEXT
					20 {
						field = number_views
					}
				}

			}

			990 = TEXT
			990 {
				wrap = <p class="back">|</p>
				field = back
				typolink {
					parameter.data = TSFE:id
				}
				required = 1
			}
		}

		#global list wrap for bloglist
		list = COA
		list {
			5 = TEXT
			5 {
				field = pageBrowser
			}

			10 = TEXT
			10 {
				wrap = <div class="blogList">|</div>
				field = listItems
			}
		}

		# single item
		single = COA
		single {

			# To add a number of comments, use 'comment_count' field

			1 = TEXT
			1 {
				field = navigation
			}

			10 = COA
			10 {
				wrap = <div class="single">|</div>

				5 = COA
				5 {
					wrap = <div class="itemTop">|<div class="clear"><!-- clear --></div></div>
					10 = TEXT
					10 {
						field = category
					}
					20 = TEXT
					20 {
						field = date
					}
					30 = TEXT
					30 {
						field = time
					}
				}

				10 = COA
				10 {
					wrap = <div class="itemBody">|<div class="clear"><!-- clear --></div></div>
					10 = COA
					10 {
						10 = TEXT
						10 {
							field = title
						}

						20 < styles.content.get
						20.select.pidInList.field=blogPid
						20.select.andWhere.dataWrap = irre_parenttable = 'tx_t3blog_post' AND irre_parentid = {field:uid}
					}
				}

				15 = COA
				15 {
					wrap = <div class="itemNav">|<div class="clear"><!-- clear --></div></div>
					10 = TEXT
					10 {
						wrap = <span class="author">|</span>
						field = author
						typolink {
							parameter.data = TSFE:id
							additionalParams.dataWrap = &tx_t3blog_pi1[blogList][author]={field:authorId}
							useCacheHash = 1
						}
					}

					12 = TEXT
					12 {
						if.isTrue.field = email
						wrap = <span class="authoremail">(|)</span>
						field = email
					}

					15 = TEXT
					15 {
						required = 1
						if.isTrue.field = email
						field = gravatar
					}

					16 = TEXT
					16 {
						if.isTrue.field = tipafriendlinkText
						wrap = <span class="blogtipafriendlink">|</span>
						field = tipafriendlinkText
						typolink {
							parameter = {$PID.tipafriendform}
							additionalParams.dataWrap = &tipUrl={field:blogUrl}
						}
					}

					25 = TEXT
					25 {
						wrap = <span class="permalink">|</span>
						field = permalink
					}

					30 = TEXT
					30 {
						wrap = <span class="trackback">|</span>
						field = trackbackLink
					}

					40 = COA
					40 {
						if.isTrue.field = tagClouds
						wrap = <br /><span class="tags">|</span>

						10 = TEXT
						10.data = LLL:EXT:t3blog/pi1/widgets/blogList/locallang.xml:tagsTitle
						10.noTrimWrap = ||: |

						20 = TEXT
						20 {
							field = tagClouds
							split {
								cObjNum = 1
								token = ,
								1 {
									1 = LOAD_REGISTER
									1 {
										linkparam.cObject = TEXT
										linkparam.cObject {
											current = 1
											trim = 1
											htmlSpecialChars = 1
											rawUrlEncode = 1
										}
									}
									10 = TEXT
									10 {
										trim = 1
										current = 1
										htmlSpecialChars = 1
										typolink {
											parameter.data = TSFE:id
											additionalParams.dataWrap = &tx_t3blog_pi1[blogList][tags]={register:linkparam}
											useCacheHash = 1
										}
										noTrimWrap = | ||
									}
								}
								wrap = | |*| ,|
							}
						}
					}

					# Number of views
					50 = COA_INT
					50 {
						wrap = <br /><span class="views">|</span>

						10 = TEXT
						10.data = LLL:EXT:t3blog/pi1/widgets/blogList/locallang.xml:viewsTitle
						10.noTrimWrap = ||: |

						20 = TEXT
						20 {
							field = number_views
						}
					}

				}
			}

			# listing of trackbacks and comments
			30 = TEXT
			30 {
				field = trackbacks
			}

			40 = TEXT
			40 {
				field = comments
			}

			50 = TEXT
			50 {
				if.isTrue.field = message
				wrap = <p class="blogCommentMessage">|</p>
				field = message
			}

			60 = TEXT
			60 {
				field = addcomment
			}

			990 = TEXT
			990 {
				wrap = <p>|</p>
				field = back
				typolink {
					parameter.data = TSFE:id
				}
			}
		}

		#Navigation in singleview (previous, back, next)
		singleNavigation = COA
		singleNavigation {
			wrap = <div id="singleNavigation">|</div>

			10 = TEXT
			10 {
				wrap = <div class="previous">|&nbsp;</div>
				field = previous
			}

			20 = TEXT
			20 {
				wrap = <div class="backtolist">|</div>
				field = backText
				typolink {
					parameter.field = backId
				}
			}

			30 = TEXT
			30 {
				wrap = <div class="next">|&nbsp;</div>
				field = next
			}

		}


		##################################
		# SINGLE elements

		titleLink = COA
		titleLink {
			#load register
			1 = LOAD_REGISTER
			1 {
				year {
					field = date
					strftime = %Y
				}
				month {
					field = date
					strftime = %m
				}
				day {
					field = date
					strftime = %d
				}
			}
			10 = TEXT
			10 {
				wrap = <h3>|</h3>
				field = title
				htmlSpecialChars = 1
				typolink {
					parameter.data = TSFE:id
					useCacheHash = 1
					additionalParams.dataWrap = &tx_t3blog_pi1[blogList][showUid]={field:uid}&tx_t3blog_pi1[blogList][year]={register:year}&tx_t3blog_pi1[blogList][month]={register:month}&tx_t3blog_pi1[blogList][day]={register:day}
				}
			}

			99 = RESTORE_REGISTER
		}

		moreLink = COA
		moreLink {
			#load register
			1 = LOAD_REGISTER
			1 {
				year {
					field = date
					strftime = %Y
				}
				month {
					field = date
					strftime = %m
				}
				day {
					field = date
					strftime = %d
				}
			}

			10 = TEXT
			10 {
				wrap = <span class="more">|</span>
				field = title
				htmlSpecialChars = 1
				typolink {
					parameter.data = TSFE:id
					useCacheHash = 1
					additionalParams.dataWrap = &tx_t3blog_pi1[blogList][showUid]={field:uid}&tx_t3blog_pi1[blogList][year]={register:year}&tx_t3blog_pi1[blogList][month]={register:month}&tx_t3blog_pi1[blogList][day]={register:day}
				}
			}

			99 = RESTORE_REGISTER
		}

		# Format the date
		date = TEXT
		date {
			wrap = <div class="date">|</div>
			field = date
			strftime = %d.%m.%Y
			required = 1
		}
		# Format the time
		time = TEXT
		time {
			wrap = <div class="time">|</div>
			field = time
			strftime = %R
			required = 1
		}
		# Format a textrow
		textRow = COA
		textRow {
		#load register
			1 = LOAD_REGISTER
			1 {
				year {
					field = date
					strftime = %Y
				}
				month {
					field = date
					strftime = %m
				}
				day {
					field = date
					strftime = %d
				}
			}
			10 = TEXT
			10 {
				wrap = <p>|</p>
				field = text
				required = 1
				parseFunc < lib.parseFunc_RTE
				parseFunc {
					nonTypoTagStdWrap.encapsLines {
						nonWrappedTag =
					}
				}
			}

			20 = TEXT
			20 {
				wrap = <p>|</p>
				field = moreText
				required = 1
				typolink {
					parameter.data = TSFE:id
					useCacheHash = 1
					additionalParams.dataWrap = &tx_t3blog_pi1[blogList][showUid]={field:uid}&tx_t3blog_pi1[blogList][year]={register:year}&tx_t3blog_pi1[blogList][month]={register:month}&tx_t3blog_pi1[blogList][day]={register:day}
				}
			}

			99 = RESTORE_REGISTER
		}

		# Formats the text of a blog element.
		textFormat = TEXT
		textFormat {
			#wrap = <p>|</p>
			field = text
			required = 1
			parseFunc < lib.parseFunc_RTE
		}

		# Format of a comments link (comments (#))
		commentsLink = COA
		commentsLink {
			#load register
			1 = LOAD_REGISTER
			1 {
				year {
					field = date
					strftime = %Y
				}
				month {
					field = date
					strftime = %m
				}
				day {
					field = date
					strftime = %d
				}
			}
			10 = TEXT
			10 {
				wrap = <span class="comments">|</span>
				value = {field:commentText} {field:commentsNr}
				insertData = 1
				typolink {
					parameter.data = TSFE:id
					useCacheHash = 1
					additionalParams.dataWrap = &tx_t3blog_pi1[blogList][showUid]={field:uid}&tx_t3blog_pi1[blogList][year]={register:year}&tx_t3blog_pi1[blogList][month]={register:month}&tx_t3blog_pi1[blogList][day]={register:day}
					section = commentList
				}
				required = 1
			}

			99 = RESTORE_REGISTER
		}

		#category link wrap
		catList = TEXT
		catList {
			wrap = <div class="categories">|</div>
			field = catLink
		}

		#a single category link wrap
		catLink = TEXT
		catLink {
			wrap = |
			field = text
			htmlSpecialChars = 1
			typolink {
				parameter.data = TSFE:id
				useCacheHash = 1
				additionalParams.dataWrap = &tx_t3blog_pi1[blogList][category]={field:categories}
			}
		}

		#add comment link wrap, for ajax comment from
		addcommentlink = TEXT
		addcommentlink {
			dataWrap = <a href="{field:urlforlink}" onclick="openCommentForm({field:url}); return false;" title="{field:name}">{field:name}</a>
		}

		#author wrap
		author = TEXT
		author {
			wrap = <span class="author">|</span>
			field = name
			htmlSpecialChars = 1
		}

		#gravatar wrap
		gravatar = TEXT
		gravatar {
			field = name
			htmlSpecialChars = 1
		}

		noResultWrap = TEXT
		noResultWrap {
			wrap = <p>|</p>
			field = text
		}

		mediaField < plugin.tx_t3blog_pi1.global.mediaField
		imgField < plugin.tx_t3blog_pi1.global.imgField
		imgFieldList < plugin.tx_t3blog_pi1.global.imgFieldList

		#single tile link for navigation
		singleNavTitleLink = COA
		singleNavTitleLink {
			#load register
			1 = LOAD_REGISTER
			1 {
				year {
					field = date
					strftime = %Y
				}
				month {
					field = date
					strftime = %m
				}
				day {
					field = date
					strftime = %d
				}
			}

			10 = TEXT
			10 {
				field = title
				htmlSpecialChars = 1
				typolink {
					parameter.data = TSFE:id
					useCacheHash = 1
					title.field = longTitle
					additionalParams.dataWrap = &tx_t3blog_pi1[blogList][showUid]={field:uid}&tx_t3blog_pi1[blogList][year]={register:year}&tx_t3blog_pi1[blogList][month]={register:month}&tx_t3blog_pi1[blogList][day]={register:day}
				}
			}

			99 = RESTORE_REGISTER
		}

		#avatar img wrap
		avatarImg = USER
		avatarImg {
			userFunc = tx_typoscripttools_pi1->main
			debug = 0
			foreign_table = be_users
			foreign_uid.field = uid
			action = damGetReferencedFiles
			//extraMediaFields = realName
			MM_ident = tx_t3blog_avatar
			mediaItem = CASE
			mediaItem {
				key.field = file_type

				default = TEXT
				default {
					wrap = |
					filelink {
						path.dataWrap = {field:file_path}{field:file_name}
						labelStdWrap.field = title
						labelStdWrap.htmlSpecialChars = 1
						icon = 1
						jumpurl = 1
						jumpurl.secure = 1
					}
				}

				jpg = IMAGE
				jpg {
					wrap = |
					file {
						import.dataWrap = {field:file_path}{field:file_name}
						maxW = 50
					}
					altText.field = be_users.realName
					altText.htmlSpecialChars = 1
					imageLinkWrap = 0
				}

				gif = IMAGE
				gif {
					wrap = |
					file {
						import.dataWrap = {field:file_path}{field:file_name}
						maxW = 50
					}
					altText.field = be_users.realName
					altText.htmlSpecialChars = 1
					imageLinkWrap = 0
				}
				png = IMAGE
				png {
					wrap = |
					file {
						import.dataWrap = {field:file_path}{field:file_name}
						maxW = 50
					}
					altText.field = be_users.realName
					altText.htmlSpecialChars = 1
					imageLinkWrap = 0
				}
			}

			mediaList = TEXT
			mediaList {
				field = mediaItems
				wrap = |
			}
		}

		###################
		#	Comment Form
		###################
		#comment error wrap
		errorWrap = TEXT
		errorWrap {
			wrap = <li>|</li>
			field = value
			required = 1
		}

		#requiredField wrap
		requiredFieldMarkerWrap = TEXT
		requiredFieldMarkerWrap {
			wrap = <span class="requiredField">|</span>
			field = marker
			required = 1
		}

		#Comment form
		commentForm = COA
		commentForm {
			5 = TEXT
			5.value = <div class="formHeader" id="comment"></div>

			6 = TEXT
			6 {
				wrap = <h6 class="commentError" >|</h6>
				field = errorTitle
				required = 1
			}
			7 = TEXT
			7 {
				wrap = <ul class="error commentError">|</ul>
				field = errorMsg
				required = 1
			}

			10 = COA
			10 {
				stdWrap.dataWrap = <div class="mailform"><h4>{field:commentTitle}</h4><form action="{field:action}#commentFormNonAjax" method="post">|</form></div>
				5 = TEXT
				5 {
					if.isTrue.field = editUid
					wrap = <input type="hidden" id="editUid" name="tx_t3blog_pi1[blogList][editUid]" value="|" />
					field = editUid
				}
				10 = COA
				10 {
					wrap = <div class="formElement text">|<div class="formClear"><!-- clear --></div></div>
					5 = TEXT
					5 {
						wrap = <div class="formElement text"><div class="formLabel"><label for="commentauthor">|</label></div>
						field = comParentId_label
						required = 1
					}

					10 = TEXT
					10 {
						dataWrap = <div class="formField">{field:parentTitle}<input type="hidden" id="comParentId" class="text" name="tx_t3blog_pi1[blogList][comParentId]" value=" | " /></div><div class="formClear"><!-- clear --></div></div>
						field = comParentId
						required = 1
					}

					15 = TEXT
					15 {
						wrap = <div class="formLabel"><label for="commentauthor">|</label></div>
						field = commentauthor_label
					}

					20 = TEXT
					20 {
						dataWrap = <div class="formField"><input type="text" id="commentauthor" class="text" name="tx_t3blog_pi1[blogList][commentauthor]" {field:readOnly} value=" | " /></div>
						htmlSpecialChars = 1
						field = commentauthor
					}
				}

				20 = COA
				20 {
					wrap = <div class="formElement text">|<div class="formClear"><!-- clear --></div></div>
					5 = TEXT
					5 {
						wrap =  <div class="formLabel"><label for="commentauthoremail"> |</label></div>
						field = commentauthoremail_label
					}

					10 = TEXT
					10 {
						dataWrap = <div class="formField"><input type="text" class="text" id="commentauthoremail" name="tx_t3blog_pi1[blogList][commentauthoremail]" {field:readOnly} value = " | " /></div>
						field = commentauthoremail
						htmlSpecialChars = 1
					}
				}

				30 = COA
				30 {
					wrap = <div class="formElement text">|<div class="formClear"><!-- clear --></div></div>
					5 = TEXT
					5 {
						wrap =  <div class="formLabel"><label for="commentauthorwebsite"> |</label></div>
						field = commentauthorwebsite_label
					}

					10 = TEXT
					10 {
						dataWrap = <div class="formField"><input type="text" class="text" id="commentauthorwebsite" name="tx_t3blog_pi1[blogList][commentauthorwebsite]" {field:readOnly} value = " | " /></div>
						field = commentauthorwebsite
						htmlSpecialChars = 1
					}
				}

				40 = COA
				40 {
					wrap = <div class="formElement text">|<div class="formClear"><!-- clear --></div></div>
					5 = TEXT
					5 {
						wrap =  <div class="formLabel"><label for="commenttitle"> |</label></div>
						field = commenttitle_label
					}

					10 = TEXT
					10 {
						wrap = <div class="formField"><input type="text" class="text" id="commenttitle" name="tx_t3blog_pi1[blogList][commenttitle]" value = " | " /></div>
						field = commenttitle
						htmlSpecialChars = 1
					}
				}

				50 = COA
				50 {
					wrap = <div class="formElement text">|<div class="formClear"><!-- clear --></div></div>
					5 = TEXT
					5 {
						wrap =  <div class="formLabel"><label for="commenttext"> |</label></div>
						field = commenttext_label
					}

					10 = TEXT
					10 {
						wrap = <div class="formField"><textarea class="text" id="commenttext" name="tx_t3blog_pi1[blogList][commenttext]" cols="50" rows="10">|</textarea></div>
						field = commenttext
						htmlSpecialChars = 1
					}
				}

				#captchaimage
				60 = COA
				60 {
					wrap = <div class="formElement text">|<div class="formClear"><!-- clear --></div></div>
					5 = TEXT
					5 {
						wrap =  <div class="formLabel"><label for="captchaimage">&nbsp;|</label></div>
						required = 1
						field = captchaimage_label
					}

					10 = TEXT
					10 {
						wrap = <div id="captchaimage" class="formField">|</div>
						field = captchaimage
						required = 1
					}
				}

				#captchatext
				70 = COA
				70 {
					wrap = <div class="formElement text">|<div class="formClear"><!-- clear --></div></div>
					5 = TEXT
					5 {
						wrap =  <div class="formLabel"><label for="captcha">|</label></div>
						required = 1
						field = captcha_label
					}

					10 = TEXT
					10 {
						wrap = <div class="formField"><input type="text" id="captcha" class="text" name="tx_t3blog_pi1[blogList][captcha]" value="" /></div>
						if.isTrue.field = captcha
					}
				}

				#subscribe
				80 = COA
				80 {
					wrap = <div class="formElement text">|<div class="formClear"><!-- clear --></div></div>
					5 = TEXT
					5 {
						wrap =  <div class="formLabel"><label for="commenttext">|</label></div>
						required = 1
						field = subscribe_label
					}

					10 = TEXT
					10 {
						dataWrap = <div class="formField"><input type="checkbox" name="tx_t3blog_pi1[blogList][subscribe]" | value="1" style="height: 10px; width: 10px !important; margin-right: 5px;" />{field:subscribe_text}</div>
						field = subscribe
						required = 1
					}
				}



				90 = COA
				90 {
					wrap = <div class="formElement">|<div class="formClear"><!-- clear --></div></div>
					5 = TEXT
					5 {
						wrap = <div class="formLabel"><label for="comment_submit">&nbsp;</label></div><div class="formField"><input type="submit" id="comment_submit" class="button" name="tx_t3blog_pi1[blogList][commentsubmit]" value=" | " /></div>
						field = submit_label
					}
				}

				100 = TEXT
				100.value = <input type="hidden" name="tx_t3blog_pi1[blogList][insert]" value="1" />

				110 = TEXT
				110.dataWrap = <input type="hidden" name="tx_t3blog_pi1[blogList][uid]" value="{field:uid}" />
			}
		}

		commentList = COA
		commentList {
			wrap = <div id="commentList">|</div>

			5 = COA
			5 {
				wrap = <ul id="commentListTitle">|</ul>

				5 = TEXT
				5 {
					wrap = <li class="start">|</li>
					value = &nbsp;
				}

				10 = TEXT
				10 {
					dataWrap = <li class="middle"><span class="commentsNr">{field:nrComments}</span>&nbsp;|</li>
					field = title
				}

				15 = TEXT
				15 {
					wrap = <li class="end">|</li>
					value = &nbsp;
				}

			}

			6 = COA
			6 {
				wrap = <div class="commentListListing">|</div>

				10 = TEXT
				10 {
					field = comments
				}
				20 = TEXT
				20 {
					field = pageBrowser
				}
			}
		}

		comment = COA
		comment {
			stdWrap {
				# WARNING! Do not change "comment_" if you use RSS feed for comments!
				dataWrap = <div class="item {field:odd}" id="comment_{field:uid}" style="margin-left:{field:margin}">|</div>
			}

			5 = TEXT
			5 {
				dataWrap = <div class="commentComments">|</div><div class="clear"><!-- clear --></div>
				field = parentcom
				required = 1
				typolink {
					parameter.field = blog_uid
					useCacheHash = 1
					additionalParams.dataWrap = &tx_t3blog_pi1[blogList][comParentId]={field:uid}&tx_t3blog_pi1[blogList][comParentTitle]={field:title}&tx_t3blog_pi1[blogList][showUid]={field:fk_post}&tx_t3blog_pi1[blogList][year]={field:blog_year}&tx_t3blog_pi1[blogList][month]={field:blog_month}&tx_t3blog_pi1[blogList][day]={field:blog_day}
					section.dataWrap = comment
				}
			}

			10 = TEXT
			10 {
				value (

						<div class="commentTopNav">
							<div class="author">{field:gravatar}{field:author}</div>
							<div class="date">{field:date} {field:time}</div>
						</div>
						<div class="commentBody">
							<h5>{field:title}</h5>

							<p>{field:text}</p>
						</div>
				)
				# {field:email}
				insertData = 1
			}
			20 = TEXT
			20 {
				wrap = <div class="commentFooter">|</div>
				field = website
				typolink {
					parameter.field = website
				}
			}

			30 = COA
			30 {
				if.isTrue.field = edit
				1 = LOAD_REGISTER
				1 {
					year {
						field = entrydate
						strftime = %Y
					}
					month {
						field = entrydate
						strftime = %m
					}
					day {
						field = entrydate
						strftime = %d
					}
				}
				10 = TEXT
				10 {
					wrap = <div class="editComment">|</div>
					field = edit
					typolink {
						parameter.data = TSFE:id
						useCacheHash = 1
						additionalParams.dataWrap = &tx_t3blog_pi1[blogList][showUid]={field:blogUid}&tx_t3blog_pi1[blogList][editCommentUid]={field:uid}&tx_t3blog_pi1[blogList][year]={register:year}&tx_t3blog_pi1[blogList][month]={register:month}&tx_t3blog_pi1[blogList][day]={register:day}
					}
				}
				99 = RESTORE_REGISTER
			}

		}

		noCommentAllowedWrap = COA
		noCommentAllowedWrap {
			wrap = <p>|</p>
			10 = TEXT
			10 {
				field = text
			}
			20 = TEXT
			20 {
				if.isTrue.field = loginPid
				field = loginLinkText
				typolink {
					parameter.field = loginPid
					additionalParams.dataWrap = &redirect_url={field:redirect_url}
				}
			}
		}

		####################
		# trackback listing
		####################
		trackbackList = COA
		trackbackList {
			wrap = <div id="trackbackList">|</div>
			if.isTrue.field = trackbacks
			5 = COA
			5 {
				wrap = <ul id="trackbackListTitle">|</ul>

				5 = TEXT
				5 {
					wrap = <li class="start">|</li>
					value = &nbsp;
				}

				10 = TEXT
				10 {
					wrap = <li class="middle">|</li>
					field = title
				}

				15 = TEXT
				15 {
					wrap = <li class="end">|</li>
					value = &nbsp;
				}

			}

			6 = COA
			6 {
				wrap = <div class="trackbackListListing">|</div>

				10 = TEXT
				10 {
					field = trackbacks
				}
				20 = TEXT
				20 {
					field = pageBrowser
				}
			}
		}

		#single trackback entry wrap
		trackback = COA
		trackback {
			stdWrap {
				dataWrap = <div class="item {field:odd}" id="trackback_{field:uid}">|</div>
			}
			10 = TEXT
			10 {
				value (

						<div class="trackbackTopNav">
							<div class="author">{field:author}</div>
							<div class="date">{field:date}{field:time}</div>
						</div>

				)
				insertData = 1
			}
			20 = COA
			20 {
				wrap = <div class="trackbackBody">|</div>
				10 = TEXT
				10 {
					wrap = <h5>|</h5>
					field = title
					typolink {
						parameter.field = url
					}
				}
				20 = TEXT
				20 {
					wrap = <p>|</p>
					field = text
				}
			}

		}
	}
}
